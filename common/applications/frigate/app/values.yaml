---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/common-4.2.0/charts/library/common/values.schema.json
global:
  alwaysAppendIdentifierToResourceName: true

defaultPodOptions:
  terminationGracePeriodSeconds: 60
  # runtimeClassName: ${FRIGATE_RUNTIME_CLASS} # TODO: nvidia vs intel
  tolerations:
    - key: nvidia.com/gpu
      operator: Exists
      effect: NoSchedule

controllers:
  main:
    initContainers:
      copy-config:
        image:
          repository: alpine
          tag: 3.22
          pullPolicy: IfNotPresent
        command:
          - cp
          - "-v"
          - /config.yaml
          - /config/config.yaml
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
          limits:
            cpu: 100m
            memory: 32Mi
    containers:
      frigate:
        image:
          repository: ghcr.io/blakeblackshear/frigate
          pullPolicy: IfNotPresent
          tag: 0.16.0 # TODO: nvidia vs intel

        env:
          - name: NVIDIA_DRIVER_CAPABILITIES
            value: "all"
          - name: NVIDIA_VISIBLE_DEVICES
            value: "all"
        envFrom:
          - secretRef:
              name: frigate-rtsp-credentials

        resources:
          requests:
            cpu: 75m
            memory: 2048Mi
          limits:
            memory: 2048Mi
            squat.ai/coral: "1"
            # nvidia.com/gpu: "1" # TODO: nvidia vs intel

        probes:
          liveness: &server_probes
            enabled: true
            custom: true
            spec:
              httpGet:
                port: 5000
                path: /
                scheme: HTTP
              initialDelaySeconds: 15
              periodSeconds: 30
              timeoutSeconds: 1
              failureThreshold: 5
          readiness: *server_probes
          startup:
            enabled: false

service:
  frigate-http:
    controller: main
    ipFamilyPolicy: PreferDualStack
    ports:
      http:
        port: 5000
      auth:
        port: 8971
  frigate-np:
    controller: main
    ipFamilyPolicy: PreferDualStack
    type: NodePort
    ports:
      http:
        port: 5000
      auth:
        port: 8971
  frigate:
    controller: main
    ipFamilyPolicy: PreferDualStack
    ports:
      rtmp:
        port: 1935
      rtsp:
        port: 8554
      webrtc-udp:
        port: 8555
        protocol: UDP
      webrtc-tcp:
        port: 8555
      go2rtc-admin:
        port: 1984

ingress:
  frigate:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: cluster-issuer-home-muehlbachler-io
      external-dns.alpha.kubernetes.io/provider: public
      external-dns.alpha.kubernetes.io/target: "${PUBLIC_IP}"
      traefik.ingress.kubernetes.io/router.tls: "true"
    hosts:
      - host: &domain nvr.${LOCAL_HOME_DOMAIN}
        paths:
          - path: /
            pathType: ImplementationSpecific
            service:
              identifier: frigate-http
              port: 8971
    tls:
      - secretName: frigate-tls-cert
        hosts:
          - *domain

persistence:
  configfile:
    enabled: true
    type: configMap
    name: frigate-config
    advancedMounts:
      main:
        copy-config:
          - path: /config.yaml
            subPath: config.yaml
  config:
    enabled: true
    type: persistentVolumeClaim
    storageClass: ${DEFAULT_STORAGE_CLASS}
    accessMode: ReadWriteOnce
    size: 1Gi
    globalMounts:
      - path: /config
  media:
    enabled: true
    type: persistentVolumeClaim
    storageClass: ${DEFAULT_STORAGE_CLASS}
    accessMode: ReadWriteOnce
    size: 20Gi
    globalMounts:
      - path: /media
  dshm:
    enabled: true
    type: emptyDir
    medium: Memory
    sizeLimit: 1Gi
    globalMounts:
      - path: /dev/shm
  tmpfs:
    enabled: true
    type: emptyDir
    medium: Memory
    sizeLimit: 1Gi
    globalMounts:
      - path: /tmp
