---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/common-3.3.0/charts/library/common/values.schema.json

controllers:
  main:
    pod:
      annotations:
        backup.velero.io/backup-volumes: data
    containers:
      immich:
        image:
          repository: ghcr.io/immich-app/immich-server
          pullPolicy: IfNotPresent
          tag: v1.120.2

        envFrom:
          - configMapRef:
              name: immich-env

        env:
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: immich-database
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: immich-database
                key: password

        resources:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            cpu: 2
            memory: 2048Mi

        probes:
          liveness: &server_probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /
                port: 2283
              initialDelaySeconds: 0
              periodSeconds: 30
              timeoutSeconds: 1
              failureThreshold: 5
          readiness: *server_probes
          startup:
            enabled: false

    initContainers:
      create-data-directories:
        image:
          repository: busybox
          tag: 1.37
          pullPolicy: IfNotPresent
        command:
          - sh
          - -c
          - "/init/create-data-directories.sh"
        securityContext:
          runAsUser: 0
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
          limits:
            cpu: 100m
            memory: 32Mi
  machine-learning:
    enabled: true
    pod:
      # runtimeClassName: nvidia
      tolerations:
        - key: nvidia.com/gpu
          operator: Exists
          effect: NoSchedule
    containers:
      machine-learning:
        image:
          repository: ghcr.io/immich-app/immich-machine-learning
          pullPolicy: IfNotPresent
          tag: v1.120.1

        envFrom:
          - configMapRef:
              name: immich-env

        env:
          # - name: NVIDIA_DRIVER_CAPABILITIES
          #   value: compute,utility
          # - name: NVIDIA_VISIBLE_DEVICES
          #   value: all
          - name: TRANSFORMERS_CACHE
            value: /cache
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: immich-database
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: immich-database
                key: password

        resources:
          requests:
            cpu: 100m
            memory: 384Mi
            # nvidia.com/gpu: "1"
          limits:
            cpu: 3
            memory: 1536Mi
            # nvidia.com/gpu: "1"

        probes:
          liveness: &ml_probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /ping
                port: 3003
              initialDelaySeconds: 0
              periodSeconds: 30
              timeoutSeconds: 1
              failureThreshold: 5
          readiness: *ml_probes
          startup:
            enabled: false
  samba-daniel:
    enabled: true
    pod:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - immich
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - main
              topologyKey: kubernetes.io/hostname
    containers:
      samba:
        image:
          repository: ghcr.io/crazy-max/samba
          pullPolicy: IfNotPresent
          tag: "4.19.9"

        env:
          - name: TZ
            value: UTC
          - name: SAMBA_SERVER_STRING
            value: photos-daniel
          - name: WSDD2_ENABLE
            value: "1"
          - name: WSDD2_HOSTNAME
            value: photos-daniel
          - name: WSDD2_NETBIOS_NAME
            value: photos-daniel
          - name: SAMBA_LOG_LEVEL
            value: "0"

        securityContext:
          runAsUser: 0
          capabilities:
            add:
              - NET_ADMIN
              - NET_RAW

        resources:
          requests:
            cpu: 5m
            memory: 128Mi
          limits:
            cpu: 1
            memory: 256Mi

        probes:
          liveness:
            enabled: false
          readiness:
            enabled: false
          startup:
            enabled: false
  samba-kasia:
    enabled: true
    pod:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - immich
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - main
              topologyKey: kubernetes.io/hostname
    containers:
      samba:
        image:
          repository: ghcr.io/crazy-max/samba
          pullPolicy: IfNotPresent
          tag: "4.19.9"

        env:
          - name: TZ
            value: UTC
          - name: SAMBA_SERVER_STRING
            value: photos-kasia
          - name: WSDD2_ENABLE
            value: "1"
          - name: WSDD2_HOSTNAME
            value: photos-kasia
          - name: WSDD2_NETBIOS_NAME
            value: photos-kasia
          - name: SAMBA_LOG_LEVEL
            value: "0"

        securityContext:
          runAsUser: 0
          capabilities:
            add:
              - NET_ADMIN
              - NET_RAW

        resources:
          requests:
            cpu: 5m
            memory: 128Mi
          limits:
            cpu: 1
            memory: 256Mi

        probes:
          liveness:
            enabled: false
          readiness:
            enabled: false
          startup:
            enabled: false

serviceAccount:
  create: true

defaultPodOptions:
  automountServiceAccountToken: false

service:
  immich:
    controller: main
    ports:
      http:
        port: 2283
  machine-learning:
    enabled: true
    controller: machine-learning
    ports:
      http:
        port: 3003
  samba-daniel:
    controller: samba-daniel
    ipFamilyPolicy: PreferDualStack
    type: LoadBalancer
    externalTrafficPolicy: Local
    annotations:
      metallb.universe.tf/loadBalancerIPs: "10.0.74.21,2a01:aea0:dd3:25a:1000:3:5:21"
      external-dns.alpha.kubernetes.io/provider: internal
      external-dns.alpha.kubernetes.io/hostname: photos-daniel.smb.internal.muehlbachler.io
    ports:
      smb:
        enabled: true
        port: 445
        protocol: TCP
        targetPort: 445
      netbios:
        enabled: true
        port: 139
        protocol: TCP
        targetPort: 139
      discovery:
        enabled: true
        port: 3702
        protocol: TCP
        targetPort: 3702
      llmnr-tcp:
        enabled: true
        port: 5355
        protocol: TCP
        targetPort: 5355
      llmnr-udp:
        enabled: true
        port: 5355
        protocol: UDP
        targetPort: 5355
  samba-kasia:
    controller: samba-kasia
    ipFamilyPolicy: PreferDualStack
    type: LoadBalancer
    externalTrafficPolicy: Local
    annotations:
      metallb.universe.tf/loadBalancerIPs: "10.0.74.22,2a01:aea0:dd3:25a:1000:3:5:22"
      external-dns.alpha.kubernetes.io/provider: internal
      external-dns.alpha.kubernetes.io/hostname: photos-kasia.smb.internal.muehlbachler.io
    ports:
      smb:
        enabled: true
        port: 445
        protocol: TCP
        targetPort: 445
      netbios:
        enabled: true
        port: 139
        protocol: TCP
        targetPort: 139
      discovery:
        enabled: true
        port: 3702
        protocol: TCP
        targetPort: 3702
      llmnr-tcp:
        enabled: true
        port: 5355
        protocol: TCP
        targetPort: 5355
      llmnr-udp:
        enabled: true
        port: 5355
        protocol: UDP
        targetPort: 5355

ingress:
  immich:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: cluster-issuer-home-muehlbachler-io
      external-dns.alpha.kubernetes.io/provider: public
      external-dns.alpha.kubernetes.io/target: 144.208.195.224,2a01:aea0:dd3:25a:1000:3:3:1
      traefik.ingress.kubernetes.io/router.tls: "true"
    hosts:
      - host: &domain photos.home.muehlbachler.io
        paths:
          - path: /
            pathType: ImplementationSpecific
            service:
              identifier: immich
              port: 2283
    tls:
      - secretName: immich-tls-cert
        hosts:
          - *domain

persistence:
  data:
    enabled: true
    type: persistentVolumeClaim
    storageClass: rook-ceph-block
    accessMode: ReadWriteOnce
    size: 256Gi
    advancedMounts:
      main:
        immich:
          - path: /data
        create-data-directories:
          - path: /data
      samba-daniel:
        samba:
          - path: /shares
      samba-kasia:
        samba:
          - path: /shares
  machine-learning-cache:
    enabled: true
    type: persistentVolumeClaim
    storageClass: rook-ceph-block
    accessMode: ReadWriteOnce
    size: 15Gi
    advancedMounts:
      machine-learning:
        machine-learning:
          - path: /cache
  config:
    enabled: true
    type: secret
    name: immich-config
    defaultMode: 511
    advancedMounts:
      main:
        immich:
          - path: /config/immich.yaml
            subPath: immich.yaml
  samba-config:
    enabled: true
    type: secret
    name: samba-config
    advancedMounts:
      samba-daniel:
        samba:
          - path: /data/config.yml
            subPath: daniel.yaml
      samba-kasia:
        samba:
          - path: /data/config.yml
            subPath: kasia.yaml
  init:
    enabled: true
    type: configMap
    name: immich-init
    defaultMode: 511
    advancedMounts:
      main:
        create-data-directories:
          - path: /init
