---
global:
  fullnameOverride: immich

controllers:
  main:
    containers:
      main:
        image:
          repository: ghcr.io/immich-app/immich-server
          pullPolicy: IfNotPresent
          tag: v1.102.3

        command:
          - sh
          - -c
          - "./start-server.sh"

        envFrom:
          - configMapRef:
              name: immich-env
          - secretRef:
              name: immich-database

        env:
          - name: IMMICH_CONFIG_FILE
            value: /config/immich.yaml
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: immich-database
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: immich-database
                key: password

        resources:
          requests:
            cpu: 50m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 512Mi

        probes:
          liveness: &server_probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /api/server-info/ping
                port: http
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *server_probes
          startup:
            enabled: false

    initContainers:
      create-data-directories:
        image:
          repository: busybox
          tag: 1.36
          pullPolicy: IfNotPresent
        command:
          - sh
          - -c
          - "/init/create-data-directories.sh"
        securityContext:
          runAsUser: 0
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
          limits:
            cpu: 100m
            memory: 32Mi
  microservices:
    enabled: true
    pod:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - immich
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - main
              topologyKey: kubernetes.io/hostname
    containers:
      main:
        image:
          repository: ghcr.io/immich-app/immich-server
          pullPolicy: IfNotPresent
          tag: v1.102.3

        command:
          - sh
          - -c
          - "./start-microservices.sh"

        envFrom:
          - name: IMMICH_CONFIG_FILE
            value: /config/immich.yaml
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: immich-database
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: immich-database
                key: password

        env:
          - name: IMMICH_CONFIG_FILE
            value: /config/immich.yaml

        resources:
          requests:
            cpu: 50m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 512Mi

        probes:
          liveness: &microservices_probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /api/server-info/ping
                port: http
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *microservices_probes
          startup:
            enabled: false
  machine-learning:
    enabled: true
    containers:
      main:
        image:
          repository: ghcr.io/immich-app/immich-machine-learning
          pullPolicy: IfNotPresent
          tag: v1.102.3

        envFrom:
          - configMapRef:
              name: immich-env
          - secretRef:
              name: immich-database

        env:
          - name: TRANSFORMERS_CACHE
            value: /cache

        resources:
          requests:
            cpu: 50m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 1024Mi

        probes:
          liveness: &ml_probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /ping
                port: http
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *ml_probes
          startup:
            enabled: false

serviceAccount:
  create: true

defaultPodOptions:
  automountServiceAccountToken: false

service:
  main:
    ports:
      http:
        port: 3001
  microservices:
    enabled: true
    ports:
      http:
        port: 3002
  machine-learning:
    enabled: true
    ports:
      http:
        port: 3003

ingress:
  main:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: cluster-issuer-home-muehlbachler-io
      external-dns.alpha.kubernetes.io/provider: public
      external-dns.alpha.kubernetes.io/target: 144.208.195.224,2a01:aea0:dd3:25a:1000:3:3:1
      traefik.ingress.kubernetes.io/router.tls: "true"
    hosts:
      - host: &domain pictures.home.muehlbachler.io
        paths:
          - path: /
            pathType: ImplementationSpecific
            service:
              name: immich
              port: 3080
    tls:
      - secretName: immich-tls-cert
        hosts:
          - *domain

persistence:
  data:
    enabled: true
    type: persistentVolumeClaim
    storageClass: zfs-retain
    accessMode: ReadWriteOnce
    size: 256Gi
    advancedMounts:
      main:
        main:
          - path: /data
        create-data-directories:
          - path: /data
      microservices:
        main:
          - path: /data
  machine-learning-cache:
    enabled: true
    type: persistentVolumeClaim
    storageClass: zfs
    accessMode: ReadWriteOnce
    size: 10Gi
    advancedMounts:
      machine-learning:
        main:
          - path: /cache
  config:
    enabled: true
    type: configMap
    name: immich-config
    defaultMode: 511
    advancedMounts:
      main:
        main:
          - path: /config/immich.yaml
            subPath: immich.yaml
      microservices:
        main:
          - path: /config/immich.yaml
            subPath: immich.yaml
  init:
    enabled: true
    type: configMap
    name: immich-init
    defaultMode: 511
    advancedMounts:
      main:
        create-data-directories:
          - path: /init
